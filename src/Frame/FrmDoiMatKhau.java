/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import Class.TaiKhoan;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADM
 */
public class FrmDoiMatKhau extends javax.swing.JFrame {
    protected ArrayList<TaiKhoan> listTK;
    protected String dbUsername, dbPassword;

    /**
     * Creates new form DoiMK_JFrame
     */
    public FrmDoiMatKhau() {
        initComponents();
        setLocationRelativeTo(null);
        
        this.listTK = new ArrayList<TaiKhoan>();
        this.dbUsername = "lnd";
        this.dbPassword = "abc";
        
        this.listTK = this.fetchList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUser = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        txtNewpass = new javax.swing.JPasswordField();
        txtRemake = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtOldPass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Tên Đăng nhập");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Mật khẩu mới");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Nhập lại mật khẩu mới");

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 0, 0));
        btnSave.setText("Đổi mật khẩu");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 51));
        jLabel4.setText("Đổi mật khẩu");

        jLabel5.setFont(new java.awt.Font("VNI-Bodon-Poster", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 153));
        jLabel5.setText("Laptop HoangTiger");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Mật khẩu cũ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNewpass, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSave)
                                    .addComponent(txtRemake, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtOldPass, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel5)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtOldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNewpass, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRemake, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtNewpass, txtOldPass, txtRemake, txtUser});

        pack();
    }// </editor-fold>//GEN-END:initComponents
    protected ArrayList<TaiKhoan> fetchList()
    {
        ArrayList<TaiKhoan> data = new ArrayList<TaiKhoan>();
        String url = "jdbc:sqlserver://localhost:1433;databasename=LAPTOP";

        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            Connection conn = DriverManager.getConnection(url, dbUsername, dbPassword);

            String query = "SELECT * FROM TAIKHOAN";
            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery(query);

            while ( resultSet.next() ) {
                int id = resultSet.getInt("IDNV");
                String name = resultSet.getString("USERNAME");
                String password = resultSet.getString("PASSWORD");
                String role = "";
                
                data.add(new TaiKhoan(id, name, password, role));
            }

        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(
                this,
                "Không tìm thấy driver tương thích!",
                "Có lỗi xảy ra!",
                JOptionPane.ERROR_MESSAGE
            );
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(
                this,
                "Không tìm thấy cơ sở dữ liệu!",
                "Có lỗi xảy ra!",
                JOptionPane.ERROR_MESSAGE
            );
        }

        return data;
    }


    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String name = this.txtUser.getText();
        String opassword = this.txtOldPass.getText();
        String password = this.txtNewpass.getText();
        String npassword = this.txtRemake.getText();

        
        if (
            name.length() == 0 ||
            opassword.length() == 0 ||
            password.length() == 0 ||
            npassword.length() == 0
        ) {
            JOptionPane.showMessageDialog(
                this,
                "Các trường dữ liệu không được để trống\n",
                "Có lỗi xảy ra!",
                JOptionPane.ERROR_MESSAGE
            );
            
            return ;
        }
        if(checkUsername()) return;
        try {
            String Newpass = txtNewpass.getText();
            if(Newpass.length() < 6 || Newpass.length() > 16 ){
                JOptionPane.showMessageDialog(this, "Mật khẩu phải từ 6-16 chữ!");
                requestFocus();
                return;
            }
            String Remake = txtNewpass.getText();
            if(Remake.length() < 6 || Remake.length() > 16 ){
                JOptionPane.showMessageDialog(this, "Mật khẩu phải từ 6-16 chữ!");
                requestFocus();
                return;
            }
            
            String s1 = txtNewpass.getText();
            String s2 = txtRemake.getText();
            if(!s1.equals(s2)){
                JOptionPane.showMessageDialog(this, "Pass và remake phải giống nhau!");
                requestFocus();
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi rồi!");
            requestFocus();
            return;
        }
        if(checkOldPass()) return;
        try {
            String query = "UPDATE TAIKHOAN SET PASSWORD = ?"
            + " WHERE USERNAME = ?";
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            String url = "jdbc:sqlserver://localhost:1433;databaseName=LAPTOP";
            Connection conn = DriverManager.getConnection(url, this.dbUsername, this.dbPassword);
            
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, password);
            ps.setString(2, name);

            ps.execute();
            JOptionPane.showMessageDialog(this, "Đổi mật khẩu thành công!");
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!");
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDoiMatKhau.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDoiMatKhau().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField txtNewpass;
    private javax.swing.JPasswordField txtOldPass;
    private javax.swing.JPasswordField txtRemake;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    private boolean checkOldPass() {
        String name = this.txtUser.getText();
        String opassword = this.txtOldPass.getText();
        boolean check = false;
        for (int i = 0; i < listTK.size(); i++) {
            if(listTK.get(i).getUsername().equals(name)){
               if(listTK.get(i).getPassword().equals(opassword)){
                   check = true;
                   break;
               }
            }
        }
        if(check == false){
            JOptionPane.showMessageDialog(this, "Mật khẩu cũ không đúng!");
            return true;
        }
        return false;
    }
    private boolean checkUsername(){
        String nm = txtUser.getText();
        boolean check = false;
        for (int i = 0; i < listTK.size(); i++) {
            if(listTK.get(i).getUsername().equals(nm)){
               check = true;
               break;
            }
        }
        if(check == false){
            JOptionPane.showMessageDialog(this, "Không tìm thấy Username!");
            return true;
        }
        return false;
    }

}
