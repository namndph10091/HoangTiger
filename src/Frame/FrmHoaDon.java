/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import Class.HoaDon;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADM
 */
public class FrmHoaDon extends javax.swing.JInternalFrame {

    protected Connection conn;
    ArrayList<HoaDon> listDonHang;
    DefaultTableModel model;
    protected int donHangDuocChon;
    int index;

    public FrmHoaDon() throws SQLException {
        initComponents();

        listDonHang = new ArrayList<>();
        model = (DefaultTableModel) tblHoaDon.getModel();

        initConnection();
        listDonHang = fetchlist();
        render(listDonHang);

//        loadDonHang();
    }

    protected void initConnection() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            String url = "jdbc:sqlserver://localhost:1433;databaseName=LAPTOP", dbuser = "lnd", dbpass = "abc";

            conn = DriverManager.getConnection(url, dbuser, dbpass);
        } catch (Exception e) {
            e.printStackTrace();

        }
    }

//    protected void loadDonHang(){
//        String query = "SELECT * FROM HOADON";
//        try {
//            PreparedStatement ps = conn.prepareStatement(query);
//            
//            ResultSet rs = ps.executeQuery();
//            
//            while(rs.next()){
//                int id = rs.getInt("MAHD");
//                String ten = rs.getString("MASP");
//                
//                DON_HANG donHang = new DON_HANG();
//                
//                listDonHang.add(donHang);
//                
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
    protected ArrayList<HoaDon> fetchlist() throws SQLException {
        ArrayList<HoaDon> list = new ArrayList<HoaDon>();
        String url = "jdbc:sqlserver://localhost:1433;databaseName=LAPTOP", dboUserName = "lnd", dboPassword = "abc";
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(url, dboUserName, dboPassword);
            String query = "Select * from HOADON";
            Statement sta = conn.createStatement();
            ResultSet rs = sta.executeQuery(query);
            while (rs.next()) {
                String mahd = rs.getString("MAHD");
                String masp = rs.getString("MASP");
                String tensp = rs.getString("TENSP");
                int soluong = rs.getInt("SOLUONG");
                String tenkh = rs.getString("TENKH");
                String sdt = rs.getString("SDTKH");
                String diachi = rs.getString("DIACHI");
                String ngaymua = rs.getString("NGAYMUA");
                int tongtien = rs.getInt("TONGTIEN");

                list.add(new HoaDon(mahd, masp, tensp, tenkh, sdt, diachi, ngaymua, soluong, tongtien));
            }
        } catch (ClassNotFoundException ex) {

        }
        return list;
    }

    private void render(ArrayList<HoaDon> list) {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        for (int i = 0; i < list.size(); i++) {
            HoaDon dh = list.get(i);
            model.addRow(new Object[]{dh.MAHD, dh.MASP, dh.TENSP, dh.SOLUONG, dh.TENKH, dh.SDTKH, dh.DIACHI, dh.NGAYMUA, dh.TONGTIEN});
        }
    }

    public void fill(HoaDon tt) {
        txtMAHD.setText(tt.getMAHD());
        txtMASP.setText(tt.getMASP());
        txtTenSP.setText(tt.getTENSP());
        txtSoLuong.setText(tt.getSOLUONG() + "");
        txtTenKH.setText(tt.getTENKH());
        txtSDT.setText(tt.getSDTKH());
        txtDiaChi.setText(tt.getDIACHI());
        txtNgayMua.setText(tt.getNGAYMUA());
        txtTongTien.setText(tt.getTONGTIEN() + "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtMASP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtNgayMua = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMAHD = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1115, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 632, Short.MAX_VALUE)
        );

        setTitle("Hóa Đơn");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("HÓA ĐƠN");

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng", "Tên Khách Hàng", "SĐT", "Địa chỉ", "Ngày Mua", "Tổng tiền"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        jLabel2.setText("Mã Sản Phẩm");

        jLabel4.setText("Tên Sản Phẩm");

        jLabel5.setText("Tên Khách Hàng");

        jLabel6.setText("Địa Chỉ");

        jLabel7.setText("Tổng Tiền");

        jLabel8.setText("SDT");

        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });

        jLabel3.setText("Số Lượng");

        jLabel9.setText("Ngày Mua");

        jLabel10.setText("Mã Hóa Đơn");

        btnClose.setBackground(new java.awt.Color(255, 153, 153));
        btnClose.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnClose.setText("x");
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(9, 9, 9)
                                                .addComponent(jLabel10))
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMAHD, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4))
                                        .addGap(22, 22, 22)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMASP, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDelete)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdate))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTenKH, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                            .addComponent(txtSDT)
                                            .addComponent(txtDiaChi)
                                            .addComponent(txtNgayMua)
                                            .addComponent(txtTongTien, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(385, 385, 385)
                        .addComponent(jLabel1)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnClose))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnUpdate});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnClose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtMAHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMASP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtNgayMua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(49, 49, 49)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAdd, btnDelete, btnUpdate});

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        String mahd = this.txtMAHD.getText();
        String masp = this.txtMASP.getText();
        String tensp = this.txtTenSP.getText();
        String soluongStr = this.txtSoLuong.getText();
        String tenkh = this.txtTenKH.getText();
        String sdtkh = this.txtSDT.getText();
        String diachi = this.txtDiaChi.getText();
        String ngaymua = this.txtNgayMua.getText();
        String tongtienStr = this.txtTongTien.getText();

        int soLuong = -1;
        int tongtien = -1;
        Date ngayMua = null;

        if (mahd.length() == 0
                || masp.length() == 0
                || tensp.length() == 0
                || soluongStr.length() == 0
                || tenkh.length() == 0
                || sdtkh.length() == 0
                || diachi.length() == 0
                || ngaymua.length() == 0
                || tongtienStr.length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống!");
            return;
        }

        try {
            soLuong = Integer.parseInt(soluongStr);
            if (soLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!");
                return;
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ!");
            nfe.printStackTrace();
            return;
        }
        try {
            if (sdtkh.length() < 10 || sdtkh.length() > 10) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải có 10 chữ số!");
                return;
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ!");
            nfe.printStackTrace();
            return;
        }

        try {
            tongtien = Integer.parseInt(tongtienStr);
            if (tongtien <= 0) {
                JOptionPane.showMessageDialog(this, "Tổng tiền phải lớn hơn 0!");
                return;
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Tổng tiền không hợp lệ!");
            nfe.printStackTrace();
            return;
        }
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-mm-dd");
            java.util.Date date = sdf.parse(ngaymua);

            ngayMua = new java.sql.Date(date.getTime());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Chưa nhập đúng định dạng ngày tháng");
            return;
        }

        String query = "INSERT INTO HOADON( MAHD, MASP, TENSP, SOLUONG,TENKH,SDTKH,DIACHI,NGAYMUA,TONGTIEN ) "
                + " VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";

        try {

            PreparedStatement ps = conn.prepareStatement(query);

            ps.setString(1, mahd);
            ps.setString(2, masp);
            ps.setString(3, tensp);
            ps.setInt(4, soLuong);
            ps.setString(5, tenkh);
            ps.setString(6, sdtkh);
            ps.setString(7, diachi);
            ps.setString(8, ngaymua);
            ps.setInt(9, tongtien);

            ps.execute();
            JOptionPane.showMessageDialog(this, "Thêm thể loại thành công!");
            listDonHang.add(new HoaDon(mahd, masp, tensp, tenkh, sdtkh, diachi, ngaymua, soLuong, tongtien));
            this.model.addRow(new Object[]{
                mahd, masp, tensp, soLuong, tenkh, sdtkh, diachi, ngaymua, tongtien
            });
        } catch (SQLException ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed


    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        index = tblHoaDon.getSelectedRow();
        fill(listDonHang.get(index));
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int row = this.tblHoaDon.getSelectedRow();
        if (row == -1) {
            return;
        }

        // Bước 1: Viết câu truy vấn
        String query = "DELETE FROM HOADON WHERE MAHD = ?";
        String maSach = this.tblHoaDon.getValueAt(row, 0).toString();

        try {
            // Bước 2: Tạo PreparedStatement từ Connection
            PreparedStatement ps = this.conn.prepareStatement(query);

            // Bước 3: do câu truy vấn có tham số -> truyền tham số cho PreparedStatement
            ps.setString(1, maSach);

            // Bước 4: Thực thi câu truy vấn
            ps.execute();

            // Bước 5: Xóa khỏi JTable & ArrayList
            this.model.removeRow(row);
            System.out.println(row);
            this.listDonHang.remove(row);
            JOptionPane.showMessageDialog(this, "Xóa bản ghi thành công!");
            
            txtMAHD.setText("");
            txtMASP.setText("");
            txtDiaChi.setText("");
            txtNgayMua.setText("");
            txtSDT.setText("");
            txtTongTien.setText("");
            txtSoLuong.setText("");
            txtTenKH.setText("");
            txtTenSP.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
//        String url = "jdbc:sqlserver://localhost:1433;databaseName=LAPTOP", dboUserName = "LAPTOP_01", dboPassword = "hoang";
//        try {
//            Connection conn = DriverManager.getConnection(url, "LAPTOP_01", "hoang");
//            String query = "UPDATE HOADON SET MAHD=?,MASP=?,TENSP=?,SOLUONG=?,TENKH=?,SDTKH=?,DIACHI=?,NGAYMUA=?,TONGTIEN=? WHERE MAHD=?";
//            PreparedStatement ps = conn.prepareStatement(query);
//            ps.setString(1, txtMAHD.getText().trim());
//            ps.setString(2, txtMASP.getText().trim());
//            ps.setString(3, txtTenSP.getText().trim());
//            ps.setString(4, txtSoLuong.getText().trim());
//            ps.setString(5, txtTenKH.getText().trim());
//            ps.setString(6, txtSDT.getText().trim());
//            ps.setString(7, txtDiaChi.getText().trim());
//            ps.setString(8, txtNgayMua.getText().trim());
//            ps.setString(9, txtTongTien.getText().trim());
//
//            ps.executeUpdate();
//            ps.close();
//            conn.close();
//            render(listDonHang);
//            DON_HANG tt = null;
//            fill(tt);
//
//        } catch (SQLException ex) {
//            Logger.getLogger(DON_HANG.class.getName()).log(Level.SEVERE, null, ex);
//        }

        int row = this.tblHoaDon.getSelectedRow();

        if (row == -1) {
            return;
        }
        String mahd = this.txtMAHD.getText();
        String masp = this.txtMASP.getText();
        String tensp = this.txtTenSP.getText();
        String soluongStr = this.txtSoLuong.getText();
        String tenkh = this.txtTenKH.getText();
        String sdtkh = this.txtSDT.getText();
        String diachi = this.txtDiaChi.getText();
        String ngaymua = this.txtNgayMua.getText();
        String tongtienStr = this.txtTongTien.getText();

        int soLuong = -1;
        int tongtien = -1;
        Date ngayMua = null;

        if (mahd.length() == 0
                || masp.length() == 0
                || tensp.length() == 0
                || soluongStr.length() == 0
                || tenkh.length() == 0
                || sdtkh.length() == 0
                || diachi.length() == 0
                || ngaymua.length() == 0
                || tongtienStr.length() == 0) {
            JOptionPane.showMessageDialog(this, "Không được để trống!");
            return;
        }

        try {
            soLuong = Integer.parseInt(soluongStr);
            if (soLuong <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0!");
                return;
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ!");
            nfe.printStackTrace();
            return;
        }
        try {
            if (sdtkh.length() < 10 || sdtkh.length() > 10) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải có 10 chữ số!");
                return;
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ!");
            nfe.printStackTrace();
            return;
        }

        try {
            tongtien = Integer.parseInt(tongtienStr);
            if (tongtien <= 0) {
                JOptionPane.showMessageDialog(this, "Tổng tiền phải lớn hơn 0!");
                return;
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Tổng tiền không hợp lệ!");
            nfe.printStackTrace();
            return;
        }
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-mm-dd");
            java.util.Date date = sdf.parse(ngaymua);

            ngayMua = new java.sql.Date(date.getTime());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Chưa nhập đúng định dạng ngày tháng");
            return;
        }

        String query = "UPDATE HOADON SET MASP=?,TENSP=?,SOLUONG=?,TENKH=?,SDTKH=?,DIACHI=?,NGAYMUA=?,TONGTIEN=? WHERE MAHD=?";
        try {
            PreparedStatement ps = conn.prepareStatement(query);

            ps.setString(1, masp);
            ps.setString(2, tensp);
            ps.setInt(3, soLuong);
            ps.setString(4, tenkh);
            ps.setString(5, sdtkh);
            ps.setString(6, diachi);
            ps.setString(7, ngaymua);
            ps.setInt(8, tongtien);
            ps.setString(9, mahd);

            ps.execute();
            JOptionPane.showMessageDialog(this, "Update thành công!");
            listDonHang = fetchlist();
            this.render(this.listDonHang);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMAHD;
    private javax.swing.JTextField txtMASP;
    private javax.swing.JTextField txtNgayMua;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
